// <auto-generated />
using System;
using AutoAuction_H2.Models.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AutoAuction_H2.Models.Migrations
{
    [DbContext(typeof(AuctionDbContext))]
    partial class AuctionDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AutoAuction_H2.Models.Persistence.AuctionEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("CurrentBid")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("HighestBidderId")
                        .HasColumnType("int");

                    b.Property<bool>("IsSold")
                        .HasColumnType("bit");

                    b.Property<decimal>("MinPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SellerId")
                        .HasColumnType("int");

                    b.Property<int>("VehicleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HighestBidderId");

                    b.HasIndex("SellerId");

                    b.HasIndex("VehicleId")
                        .IsUnique();

                    b.ToTable("Auctions");
                });

            modelBuilder.Entity("AutoAuction_H2.Models.Persistence.BidEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("AuctionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AuctionId");

                    b.HasIndex("UserId");

                    b.ToTable("Bids");
                });

            modelBuilder.Entity("AutoAuction_H2.Models.Persistence.UserEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Balance")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CreditLimit")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserType")
                        .HasColumnType("int");

                    b.Property<int>("ZipCode")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("AutoAuction_H2.Models.Persistence.VehicleEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("FuelEfficiency")
                        .HasColumnType("float");

                    b.Property<int>("FuelType")
                        .HasColumnType("int");

                    b.Property<double>("Mileage")
                        .HasColumnType("float");

                    b.Property<double>("MotorSize")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PurchasePrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("RegistrationNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TowBar")
                        .HasColumnType("bit");

                    b.Property<string>("VehicleType")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("nvarchar(21)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Vehicles");

                    b.HasDiscriminator<string>("VehicleType").HasValue("VehicleEntity");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("AutoAuction_H2.Models.Persistence.BusEntity", b =>
                {
                    b.HasBaseType("AutoAuction_H2.Models.Persistence.VehicleEntity");

                    b.Property<int>("Doors")
                        .HasColumnType("int");

                    b.Property<bool>("HasToilet")
                        .HasColumnType("bit");

                    b.Property<double>("Height")
                        .HasColumnType("float");

                    b.Property<double>("Length")
                        .HasColumnType("float");

                    b.Property<int>("Seats")
                        .HasColumnType("int");

                    b.Property<double>("Width")
                        .HasColumnType("float");

                    b.ToTable("Vehicles", t =>
                        {
                            t.Property("Height")
                                .HasColumnName("BusEntity_Height");

                            t.Property("Length")
                                .HasColumnName("BusEntity_Length");

                            t.Property("Seats")
                                .HasColumnName("BusEntity_Seats");

                            t.Property("Width")
                                .HasColumnName("BusEntity_Width");
                        });

                    b.HasDiscriminator().HasValue("Bus");
                });

            modelBuilder.Entity("AutoAuction_H2.Models.Persistence.CarEntity", b =>
                {
                    b.HasBaseType("AutoAuction_H2.Models.Persistence.VehicleEntity");

                    b.Property<bool>("Isofix")
                        .HasColumnType("bit");

                    b.Property<int>("Seats")
                        .HasColumnType("int");

                    b.Property<int>("TrunkSize")
                        .HasColumnType("int");

                    b.ToTable("Vehicles", t =>
                        {
                            t.Property("Isofix")
                                .HasColumnName("CarEntity_Isofix");

                            t.Property("Seats")
                                .HasColumnName("CarEntity_Seats");

                            t.Property("TrunkSize")
                                .HasColumnName("CarEntity_TrunkSize");
                        });

                    b.HasDiscriminator().HasValue("Car");
                });

            modelBuilder.Entity("AutoAuction_H2.Models.Persistence.PrivateCarEntity", b =>
                {
                    b.HasBaseType("AutoAuction_H2.Models.Persistence.VehicleEntity");

                    b.Property<bool>("Isofix")
                        .HasColumnType("bit");

                    b.Property<int>("Seats")
                        .HasColumnType("int");

                    b.ToTable("Vehicles", t =>
                        {
                            t.Property("Seats")
                                .HasColumnName("PrivateCarEntity_Seats");
                        });

                    b.HasDiscriminator().HasValue("PrivateCar");
                });

            modelBuilder.Entity("AutoAuction_H2.Models.Persistence.ProfessionalCarEntity", b =>
                {
                    b.HasBaseType("AutoAuction_H2.Models.Persistence.VehicleEntity");

                    b.Property<double>("LoadCapacity")
                        .HasColumnType("float");

                    b.Property<bool>("SafetyBar")
                        .HasColumnType("bit");

                    b.Property<int>("Seats")
                        .HasColumnType("int");

                    b.Property<int>("TrunkSize")
                        .HasColumnType("int");

                    b.ToTable("Vehicles", t =>
                        {
                            t.Property("LoadCapacity")
                                .HasColumnName("ProfessionalCarEntity_LoadCapacity");
                        });

                    b.HasDiscriminator().HasValue("ProfessionalCar");
                });

            modelBuilder.Entity("AutoAuction_H2.Models.Persistence.TruckEntity", b =>
                {
                    b.HasBaseType("AutoAuction_H2.Models.Persistence.VehicleEntity");

                    b.Property<double>("Height")
                        .HasColumnType("float");

                    b.Property<double>("Length")
                        .HasColumnType("float");

                    b.Property<double>("LoadCapacity")
                        .HasColumnType("float");

                    b.Property<double>("Width")
                        .HasColumnType("float");

                    b.HasDiscriminator().HasValue("Truck");
                });

            modelBuilder.Entity("AutoAuction_H2.Models.Persistence.AuctionEntity", b =>
                {
                    b.HasOne("AutoAuction_H2.Models.Persistence.UserEntity", "HighestBidder")
                        .WithMany()
                        .HasForeignKey("HighestBidderId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("AutoAuction_H2.Models.Persistence.UserEntity", "Seller")
                        .WithMany()
                        .HasForeignKey("SellerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AutoAuction_H2.Models.Persistence.VehicleEntity", "Vehicle")
                        .WithOne()
                        .HasForeignKey("AutoAuction_H2.Models.Persistence.AuctionEntity", "VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HighestBidder");

                    b.Navigation("Seller");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("AutoAuction_H2.Models.Persistence.BidEntity", b =>
                {
                    b.HasOne("AutoAuction_H2.Models.Persistence.AuctionEntity", "Auction")
                        .WithMany("Bids")
                        .HasForeignKey("AuctionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AutoAuction_H2.Models.Persistence.UserEntity", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Auction");

                    b.Navigation("User");
                });

            modelBuilder.Entity("AutoAuction_H2.Models.Persistence.AuctionEntity", b =>
                {
                    b.Navigation("Bids");
                });
#pragma warning restore 612, 618
        }
    }
}
